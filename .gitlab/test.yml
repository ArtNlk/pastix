---
.test_script_sched_template: &test_script_sched
  stage: test
  tags: ["large", "docker"]
  artifacts:
    name: pastix_test_${VERSION}_${RUN}_sched${SCHED}
    expire_in: 180 minutes
    paths:
      - pastix-${VERSION}-${RUN}-sched${SCHED}.lcov
      - pastix-gcov-${VERSION}-${RUN}-sched${SCHED}.log
    reports:
      junit: report.xml
  script:
    - source install-${VERSION}/bin/pastix_env.sh
    - (cd build &&
       eval "ctest
             -R \"^${RUN}_.*_sched${SCHED}\"
             -D ExperimentalTest
             -D ExperimentalCoverage
             | tee -a ../pastix-build-${VERSION}.log")
    - lcov --capture --directory build
           -q --output-file pastix-${VERSION}-${RUN}-sched${SCHED}.lcov
           | tee -a pastix-gcov-${VERSION}-${RUN}-sched${SCHED}.log
    - xsltproc -o report.xml /home/gitlab/ctest-to-junit.xsl build/Testing/**/Test.xml

.test_script_sched_template_seq: &test_script_sched_seq
  extends:
    - .test_script_sched_template
    - .only-branches-seq

.test_script_sched_template_mpi: &test_script_sched_mpi
  extends:
    - .test_script_sched_template
    - .only-branches-mpi

test_seq_sched:
  variables:
    VERSION: seq
  needs: [build_pastix_seq]
  parallel:
    matrix:
      - SCHED: [0, 1, 2, 3, 4]
        RUN: shm
  dependencies:
    - build_pastix_seq
  <<: *test_script_sched_seq

test_mpi_sched:
  variables:
    VERSION: mpi
  needs: [build_pastix_mpi]
  parallel:
    matrix:
      - SCHED: [0, 1, 2, 3, 4]
        RUN: [shm, mpi_rep, mpi_dst]
  dependencies:
    - build_pastix_mpi
  <<: *test_script_sched_mpi
