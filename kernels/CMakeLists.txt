include(RulesPrecisions)
# reset variables
set(generated_files "")
set(generated_headers "")

include_directories(BEFORE ${CMAKE_CURRENT_SOURCE_DIR})
include_directories(BEFORE "/usr/local/include/eigen")
include_directories(BEFORE "${HODLR_SOURCE_DIR}/include/")
include_directories(BEFORE "${HODLR_BINARY_DIR}/src/")

set(HEADERS
  pastix_zcores.h
)

### generate the dsparse_cores headers for all possible precisions
precisions_rules_py(generated_headers
                    "${HEADERS}"
                    PRECISIONS "s;d;c;z")

add_custom_target(kernels_headers DEPENDS ${generated_headers} )

### Generate the CPU kernels for all required precisions
set(SOURCES
  # CPU extra kernel
  core_zgemdm.c
  core_zgetro.c
  core_zgeadd.c
  core_zplrnt.c
  core_zgemmsp.c
  # Kernels
  core_zsytrfsp.c
  core_zhetrfsp.c
  core_zpotrfsp.c
  core_zgetrfsp.c
  core_zgelrops.c
)

precisions_rules_py(generated_files
   "${SOURCES}"
   PRECISIONS "s;d;c;z")

if(PASTIX_WITH_CUDA)
   set( CUDA_SOURCES
     # GPU kernel
     gpu_zgemmsp.c
    )
   set(CUDA_generated_files "")
   precisions_rules_py(CUDA_generated_files
        "${CUDA_SOURCES}"
        PRECISIONS "s;d;c;z")

   set(generated_files
       ${generated_files}
       ${CUDA_generated_files})

   add_subdirectory(gpus/kepler)

endif(PASTIX_WITH_CUDA)

add_library(pastix_kernels ${generated_files} )
add_dependencies(pastix_kernels kernels_headers)

# link_directories(
#   ${CBLAS_LIBRARY_DIRS}
#   ${BLAS_LIBRARY_DIRS}
# )

if(PASTIX_WITH_HODLR)
  add_library(HODLR STATIC IMPORTED)
  set_target_properties(HODLR PROPERTIES
    IMPORTED_LOCATION "${HODLR_BINARY_DIR}/src/libHODLRSolver.a"
    IMPORTED_LINK_INTERFACE_LANGUAGES "CXX")
  target_link_libraries(pastix_kernels HODLR)
endif() #PASTIX_WITH_HODLR

target_link_libraries( pastix_kernels
  ${LAPACKE_LIBRARIES}
  ${LAPACK_SEQ_LIBRARIES}
  ${CBLAS_LIBRARIES}
  ${BLAS_SEQ_LIBRARIES}
  ${EXTRA_LIBS}
)

if(PASTIX_WITH_CUDA)
  target_link_libraries( pastix_kernels
    pastix_cucores_sm35
    )
endif()
